/*
    Условие задачи
    Дан массив целых чисел nums, отсортированный в неубывающем порядке (каждый следующий элемент больше или равен предыдущему).
    Ваша задача: Удалить дубликаты элементов на месте (in-place) таким образом, чтобы каждый уникальный элемент появлялся не более двух раз. Относительный порядок 
    элементов должен быть сохранён.
    Поскольку в некоторых языках программирования невозможно изменить длину массива, результат должен быть размещён в первой части массива nums. Формально: если после удаления 
    дубликатов осталось k элементов, то первые k элементов массива nums должны содержать конечный результат. То, что остаётся после первых k элементов, не имеет значения.
    Верните значение k после размещения конечного результата в первых k ячейках массива nums.
    Запрещается использовать дополнительную память под другой массив. Решение должно быть реализовано путём модификации исходного массива с использованием только O(1) 
    дополнительной памяти.

    Пример 1:
        Вход: nums = [1,1,1,2,2,3]
        Выход: 5, nums = [1,1,2,2,3,_]
        Объяснение: Функция возвращает k = 5. Первые пять элементов массива nums становятся 1, 1, 2, 2, 3. Оставшиеся элементы не важны (обозначены _).

    Пример 2:
        Вход: nums = [0,0,1,1,1,1,2,3,3]
        Выход: 7, nums = [0,0,1,1,2,3,3,_,_]
        Объяснение: Функция возвращает k = 7. Первые семь элементов массива nums становятся 0, 0, 1, 1, 2, 3, 3. Оставшиеся элементы не важны.
*/

function removeDuplicates(nums) {
    if (nums.length <= 2) return nums.length;
    
    let i = 2;
    for (let j = 2; j < nums.length; j++) {
        if (nums[j] !== nums[i - 2]) {
            nums[i] = nums[j];
            i++;
        }
    }
    return i;
};

removeDuplicates([0,0,1,1,1,1,2,3,3])