/*
    Дан массив целых чисел nums, отсортированный в неубывающем порядке (т.е. каждый следующий элемент больше или равен предыдущему).
    Ваша задача: Удалить все дубликаты элементов на месте (in-place), чтобы каждый уникальный элемент встречался только один раз. Относительный порядок элементов должен 
    быть сохранён.
    Затем нужно вернуть количество уникальных элементов k.

    Требования к решению:
    Измените исходный массив nums так, чтобы первые k элементов содержали уникальные элементы в том порядке, в котором они были изначально.
    Элементы, находящиеся на позициях после k-го, не важны (так же как и не важен размер массива nums).
    Верните число k.

    Пример 1:
        Вход: nums = [1,1,2]
        Выход: 2, nums = [1,2,_]
        Объяснение: Ваша функция должна вернуть k = 2. Первые два элемента массива nums должны стать 1 и 2 соответственно. Не имеет значения, что останется 
        после возвращённого значения k (обозначено символом подчёркивания _).

    Пример 2:
        Вход: nums = [0,0,1,1,1,2,2,3,3,4]  
        Выход: 5, nums = [0,1,2,3,4,_,_,_,_,_]
        Объяснение: Функция возвращает k = 5. Первые пять элементов массива nums становятся 0, 1, 2, 3, 4. Не имеет значения, что останется после них.
*/

function removeDuplicates(nums) {
    let prev = 0
    let next = 1

    while (next <= nums.length - 1) {
        if (nums[prev] === nums[next]) {
            next++
        } else {
            prev++
            nums[prev] = nums[next]
        }
    }
    return ++prev
};

removeDuplicates([1,1,2])