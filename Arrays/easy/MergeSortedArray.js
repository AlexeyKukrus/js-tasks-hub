/*
    Вам даны два целочисленных массива nums1 и nums2, отсортированных в неубывающем порядке, и два целых числа m и n, 
    представляющих количество элементов в nums1 и nums2 соответственно.

    Объединить в один массив nums1 и nums2 отсортированный в неубывающем порядке.

    Итоговый отсортированный массив не должен возвращаться функцией, а должен быть сохранён внутри массива nums1. Для этого nums1 длина 
    массива равна m + n, где первые m элементы обозначают элементы, которые следует объединить, а последние n элементы имеют значение 0 и 
    должны игнорироваться. nums2 Длина массива равна n.

    Алгоритм должен работать за линейное время O(m+n)
*/

const nums1 = [1,2,3,0,0,0]    // [1]      [0]     [1,2,3,0,0,0] 
const nums2 = [2,5,6]          // []       [1]     [2,5,6]
const m = 3                    // 1        0       3
const n = 3                    // 0        1       3

function merge(nums1, m, nums2, n) {
    let i = m - 1;
    let j = n - 1;
    let k = (m + n) - 1;
    
    while (i >= 0 && j >= 0) {
        if (nums1[i] > nums2[j]) {
            nums1[k] = nums1[i];
            i--;
        } else {
            nums1[k] = nums2[j];
            j--;
        }
        k--;
    }
    
    while (j >= 0) {
        nums1[k] = nums2[j];
        j--;
        k--;
    }
    
    return nums1;
}

merge(nums1, m, nums2, n)